version: '3'
services:
  account:
    build:
      context: .
      dockerfile: ./apps/account/Dockerfile
    command: npm run start:dev account
    depends_on: 
      db:
        condition: service_started
      kafka:
        condition: service_started
    environment:
      DATABASE_URL: postgres://root:root@db:5432/product_db  
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - gqltask  

  cart:
    build:
      context: .
      dockerfile: ./apps/cart/Dockerfile
    command: npm run start:dev cart
    depends_on: 
      - db
      - kafka
    environment:
      DATABASE_URL: postgres://root:root@db:5432/product_db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - gqltask 

  catalog:
    build:
      context: .
      dockerfile: ./apps/catalog/Dockerfile
    command: npm run start:dev catalog
    depends_on: 
      - db
      - kafka
    environment:
      DATABASE_URL: postgres://root:root@db:5432/product_db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - gqltask    

  order:
    build:
      context: .
      dockerfile: ./apps/order/Dockerfile
    command: npm run start:dev order
    depends_on: 
      - db
      - kafka
    environment:
      DATABASE_URL: postgres://root:root@db:5432/product_db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - gqltask        

  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    command: npm run start:dev api-gateway
    depends_on: 
      - db
    ports: 
      - "3001:3001"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - gqltask       

  db:
    container_name: pg_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: product_db
    ports:
      - "5432:5432"
    networks:
      - gqltask

  kafka:
    hostname: localhost
    image: "bitnami/kafka:3.5.1-debian-11-r21"
    ports:
      - "9092:9092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0 
      - KAFKA_CFG_PROCESS_ROLES=controller,broker 
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093 
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092 
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT 
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER 
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT       

networks:
  gqltask:
    driver:  bridge
